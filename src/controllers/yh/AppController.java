package controllers.yh;import java.text.SimpleDateFormat;import java.util.Date;import java.util.List;import models.UserLogin;import models.yh.profile.OfficeCofig;import org.apache.commons.mail.DefaultAuthenticator;import org.apache.commons.mail.Email;import org.apache.commons.mail.SimpleEmail;import org.apache.shiro.SecurityUtils;import org.apache.shiro.authc.AuthenticationException;import org.apache.shiro.authc.IncorrectCredentialsException;import org.apache.shiro.authc.LockedAccountException;import org.apache.shiro.authc.UnknownAccountException;import org.apache.shiro.authc.UsernamePasswordToken;import org.apache.shiro.subject.Subject;import com.jfinal.core.Controller;import com.jfinal.log.Logger;import com.jfinal.plugin.activerecord.Db;import com.jfinal.plugin.activerecord.Record;public class AppController extends Controller {	private Logger logger = Logger.getLogger(AppController.class);    // in config route已经将路径默认设置为/yh    // me.add("/yh", controllers.yh.AppController.class, "/yh");    Subject currentUser = SecurityUtils.getSubject();    private boolean isAuthenticated() {        // remember me 处理，自动帮user 登陆        if (!currentUser.isAuthenticated() && currentUser.isRemembered()) {            Object principal = currentUser.getPrincipal();            if (null != principal) {                UserLogin user = UserLogin.dao.findFirst("select * from user_login where user_name='" + String.valueOf(principal) + "' and (is_stop = 0 or is_stop is null)");                if(user==null){//这里是预防user使用了remember me, 但是user ID在表中已删除                	redirect("/login");                	return false;                }                String password = user.getStr("password");                UsernamePasswordToken token = new UsernamePasswordToken(user.getStr("user_name"), password);                token.setRememberMe(true);                currentUser.login(token);// 登录            }        }        if (!currentUser.isAuthenticated()) {            redirect("/login");            return false;        }        setAttr("userId", currentUser.getPrincipal());        return true;    }    public void index() {    	setSysTitle();        if (isAuthenticated()) {        	UserLogin user = UserLogin.dao.findFirst("select * from user_login where user_name=?",currentUser.getPrincipal());        	            if(user.get("c_name")!=null&&!"".equals(user.get("c_name"))){            	setAttr("userId", user.get("c_name"));            }else{            	setAttr("userId", currentUser.getPrincipal());            }                        setAttr("user_login_id", currentUser.getPrincipal());            setAttr("login_time",user.get("last_login"));            //查询两个月内即将过期的客户合同            String sql ="select c.id, c.name, c.period_to from contract c left join party p on c.party_id = p.id "+						"where p.party_type='CUSTOMER' AND office_id = "+ user.getLong("office_id")+						" and period_to >sysdate() "+						" and period_to < DATE_ADD(sysdate(),INTERVAL 60 DAY);";            List<Record> contractList = Db.find(sql);            setAttr("contractList", contractList);                        Date now = new Date();             SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");//可以方便地修改日期格式            String currentTime = dateFormat.format( now );            user.set("last_login", currentTime);            user.update();                        render("/yh/index.html");        }    }    public void login() {    	if (isAuthenticated()) {    		redirect("/");    	}        String username = getPara("username");                setSysTitle();                if (username == null) {            render("/yh/login.html");            return;        }        UsernamePasswordToken token = new UsernamePasswordToken(getPara("username"), getPara("password"));        if (getPara("remember") != null && "Y".equals(getPara("remember")))            token.setRememberMe(true);        String errMsg = "";        try {            currentUser.login(token);            if (getPara("remember") != null && "Y".equals(getPara("remember"))){                // timeout:-1000ms 这样设置才能永不超时             	currentUser.getSession().setTimeout(-1000L);            }        } catch (UnknownAccountException uae) {            errMsg = "用户名不存在";            errMsg = "用户名/密码不正确";            uae.printStackTrace();        } catch (IncorrectCredentialsException ice) {            errMsg = "密码不正确";            errMsg = "用户名/密码不正确";            ice.printStackTrace();        } catch (LockedAccountException lae) {            errMsg = "用户名已被停用";            lae.printStackTrace();        } catch (AuthenticationException ae) {            errMsg = "用户名/密码不正确";            ae.printStackTrace();        }        if (errMsg.length()==0) {        	        	UserLogin user = UserLogin.dao.findFirst("select * from user_login where user_name=? and (is_stop = 0 or is_stop is null)",currentUser.getPrincipal());        	        	        	if(user==null){            	errMsg = "用户名不存在或已被停用";            	setAttr("errMsg", errMsg);            	render("/yh/login.html");            }else if(user.get("c_name") != null && !"".equals(user.get("c_name"))){            	setAttr("userId", user.get("c_name"));            	/*setAttr("login_time",user.get("last_login"));*/            	redirect("/");            	//render("/yh/index.html");            }else{            	setAttr("userId",currentUser.getPrincipal());            	/*setAttr("login_time",user.get("last_login"));*/            	redirect("/");            	//render("/yh/index.html");            };                              } else {            setAttr("errMsg", errMsg);            render("/yh/login.html");        }    }	private void setSysTitle() {		String serverName = getRequest().getServerName();        String basePath = getRequest().getScheme()+"://"+getRequest().getServerName()+":"+getRequest().getServerPort()+"/";                logger.debug(serverName);        OfficeCofig of = OfficeCofig.dao.findFirst("select * from office_config where domain like '"+serverName +"%' or domain like '%"+serverName +"%'");        setAttr("SYS_CONFIG", of);	}    public void logout() {        currentUser.logout();        redirect("/login");    }    // 使用common-email, javamail    public void testMail() throws Exception {        Email email = new SimpleEmail();        email.setHostName("smtp.exmail.qq.com");        email.setSmtpPort(465);        email.setAuthenticator(new DefaultAuthenticator("red.luo@eeda123.com", "luo0330"));        email.setSSLOnConnect(true);        email.setFrom("red.luo@eeda123.com");        email.setSubject("忘记密码");        email.setMsg("你的密码已重置");        email.addTo("red.luo@eeda123.com");        email.send();            }}