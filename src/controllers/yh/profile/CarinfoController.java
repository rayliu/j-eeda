package controllers.yh.profile;import java.util.Calendar;import java.util.Date;import java.util.HashMap;import java.util.List;import java.util.Map;import javax.servlet.http.HttpServletRequest;import models.DepartOrder;import models.Party;import models.yh.profile.Carinfo;import models.yh.profile.Contact;import org.apache.shiro.SecurityUtils;import org.apache.shiro.subject.Subject;import com.jfinal.core.Controller;import com.jfinal.log.Logger;import com.jfinal.plugin.activerecord.Db;import com.jfinal.plugin.activerecord.Record;import controllers.yh.LoginUserController;public class CarinfoController extends Controller {    private Logger logger = Logger.getLogger(CarinfoController.class);    // in config route已经将路径默认设置为/yh    // me.add("/yh", controllers.yh.AppController.class, "/yh");    static Subject currentUser = SecurityUtils.getSubject();    public static boolean isAuthenticated(Controller controller) {        currentUser = SecurityUtils.getSubject();        if (!currentUser.isAuthenticated()) {            controller.redirect("/yh/login");            return false;        }        controller.setAttr("userId", currentUser.getPrincipal());        return true;    }    public void index() {        HttpServletRequest re = getRequest();        String url = re.getRequestURI();        logger.debug("URI:" + url);        if (url.equals("/yh/carinfo")) {            if (LoginUserController.isAuthenticated(this))                render("/yh/profile/carinfo/carlist.html");        }        if (url.equals("/yh/carmanage")) {            if (LoginUserController.isAuthenticated(this))                render("/yh/carmanage/carmanage.html");        }        if (url.equals("/yh/driverinfo")) {            if (LoginUserController.isAuthenticated(this))                render("/yh/profile/carinfo/driverlist.html");        }    }    public void list() {        String sLimit = "";        String pageIndex = getPara("sEcho");        if (getPara("iDisplayStart") != null && getPara("iDisplayLength") != null) {            sLimit = " LIMIT " + getPara("iDisplayStart") + ", " + getPara("iDisplayLength");        }        // 获取总条数        String totalWhere = "";        String sql = "select count(1) total from carinfo ";        Record rec = Db.findFirst(sql + totalWhere);        logger.debug("total records:" + rec.getLong("total"));        // 获取当前页的数据        List<Record> orders = Db.find("select * from carinfo" + sLimit);        Map orderMap = new HashMap();        orderMap.put("sEcho", pageIndex);        orderMap.put("iTotalRecords", rec.getLong("total"));        orderMap.put("iTotalDisplayRecords", rec.getLong("total"));        orderMap.put("aaData", orders);        renderJson(orderMap);    }    public void driverlist() {        String sLimit = "";        String pageIndex = getPara("sEcho");        if (getPara("iDisplayStart") != null && getPara("iDisplayLength") != null) {            sLimit = " LIMIT " + getPara("iDisplayStart") + ", " + getPara("iDisplayLength");        }        // 获取总条数        String totalWhere = "";        String sql = "select count(1) total from party where party_type='DRIVER'";        Record rec = Db.findFirst(sql + totalWhere);        logger.debug("total records:" + rec.getLong("total"));        // 获取当前页的数据        List<Record> orders = Db.find("select *,p.id as pid from party p left join contact c on p.contact_id =c.id "                + "where party_type='DRIVER'" + sLimit);        Map orderMap = new HashMap();        orderMap.put("sEcho", pageIndex);        orderMap.put("iTotalRecords", rec.getLong("total"));        orderMap.put("iTotalDisplayRecords", rec.getLong("total"));        orderMap.put("aaData", orders);        renderJson(orderMap);    }    // 发车记录单list    public void carmanageList() {        String sLimit = "";        String pageIndex = getPara("sEcho");        if (getPara("iDisplayStart") != null && getPara("iDisplayLength") != null) {            sLimit = " LIMIT " + getPara("iDisplayStart") + ", " + getPara("iDisplayLength");        }        // 获取总条数        String totalWhere = "";        String sql = "select count(1) total from depart_order dor " + ""                    + " left join carinfo c on dor.driver_id = c.id " + " where dor.status!='取消' and combine_type = '"                    + DepartOrder.COMBINE_TYPE_PICKUP + "' and (dor.status = '已入货场' or dor.status = '已入库' ) and dor.pickup_mode = 'own'";        Record rec = Db.findFirst(sql + totalWhere);        logger.debug("total records:" + rec.getLong("total"));        // 获取当前页的数据        List<Record> orders = Db.find("select dor.*,ct.contact_person,ct.phone,c.car_no,c.cartype,c.status cstatus,c.length, (select group_concat(dt.transfer_order_no separator '\r\n')  from depart_transfer dt where depart_id = dor.id)  as transfer_order_no  from depart_order dor "                    + " left join carinfo c on dor.carinfo_id = c.id "                    + " left join party p on dor.driver_id = p.id "                    + " left join contact ct on p.contact_id = ct.id "                    + " where dor.status!='取消' and combine_type = '"                    + DepartOrder.COMBINE_TYPE_PICKUP + "' and combine_type = 'PICKUP' and (dor.status = '已入货场' or dor.status = '已入库' ) and dor.pickup_mode = 'own' order by dor.create_stamp desc " + sLimit);        Map orderMap = new HashMap();        orderMap.put("sEcho", pageIndex);        orderMap.put("iTotalRecords", rec.getLong("total"));        orderMap.put("iTotalDisplayRecords", rec.getLong("total"));        orderMap.put("aaData", orders);        renderJson(orderMap);    }    public void add() {        if (LoginUserController.isAuthenticated(this))            render("/yh/profile/carinfo/edit.html");    }    public void driveradd() {        if (LoginUserController.isAuthenticated(this))            render("/yh/profile/carinfo/driveredit.html");    }    // 添加车辆    public void save() {        String id = getPara("carId");        Carinfo carinfo = null;        if (id != "") {            carinfo = Carinfo.dao.findById(id);            setCarifo(carinfo);            carinfo.update();        } else {            carinfo = new Carinfo();            setCarifo(carinfo);            carinfo.save();        }        redirect("/yh/carinfo");    }    // 添加司机保存    public void driversave() {        String id = getPara("driverId");        Party party = null;        Contact contact = null;        Date createDate = Calendar.getInstance().getTime();        if (!id.isEmpty()) {            party = Party.dao.findById(id);            party.set("last_update_date", createDate);            party.set("license", getPara("license"));            party.update();            contact = Contact.dao.findFirst("select c.* from contact c,party p where c.id=p.contact_id and p.id=" + id);            setContact(contact);            contact.update();        } else {            contact = new Contact();            setContact(contact);            contact.save();            party = new Party();            party.set("party_type", Party.PARTY_TYPE_DRIVER);            party.set("contact_id", contact.getLong("id"));            party.set("creator", currentUser.getPrincipal());            party.set("create_date", createDate);            party.set("license", getPara("license"));            party.save();        }        setAttr("saveOK", true);        if (LoginUserController.isAuthenticated(this))            redirect("/yh/customer");        redirect("/yh/driverinfo");    }    private void setContact(Contact contact) {        // contact.set("company_name", getPara("company_name"));        contact.set("contact_person", getPara("driver"));        contact.set("phone", getPara("phone"));        contact.set("identification", getPara("identification"));    }    public void setCarifo(Carinfo carinfo) {        carinfo.set("driver", getPara("driver"));        carinfo.set("cartype", getPara("ctype"));        carinfo.set("car_no", getPara("car_number"));        carinfo.set("phone", getPara("phone"));        carinfo.set("length", getPara("length"));    }    public void delect() {        String id = getPara();        if (id != null) {            Carinfo.dao.deleteById(id);        }        renderJson("{\"success\":true}");    }    public void driverdelect() {        long id = getParaToLong();        Party party = Party.dao.findById(id);        Contact contact = Contact.dao.findFirst("select c.* from contact c,party p where c.id=p.contact_id and p.id="                + id);        ;        contact.delete();        party.delete();        renderJson("{\"success\":true}");    }    public void edit() {        String id = getPara();        Carinfo carinfo = Carinfo.dao.findById(id);        System.out.println(carinfo);        setAttr("lu", carinfo);        render("/yh/profile/carinfo/edit.html");    }    public void driveredit() {        String id = getPara();        Party party = Party.dao.findById(id);        Contact contact = Contact.dao.findById(party.get("contact_id"));        System.out.println(party);        System.out.println(contact);        setAttr("lu", party);        setAttr("lu2", contact);        render("/yh/profile/carinfo/driveredit.html");    }}