package controllers.yh.contract;import java.util.HashMap;import java.util.List;import java.util.Map;import models.Party;import com.jfinal.core.Controller;import com.jfinal.log.Logger;import com.jfinal.plugin.activerecord.Db;import com.jfinal.plugin.activerecord.Record;public class ContractController extends Controller {    private Logger logger = Logger.getLogger(ContractController.class);    // in config route已经将路径默认设置为/yh    // me.add("/yh", controllers.yh.AppController.class, "/yh");    public void index() {        render("contract/ContractList.html");    }    public void list() {        /*         * Paging         */        String sLimit = "";        String pageIndex = getPara("sEcho");        if (getPara("iDisplayStart") != null && getPara("iDisplayLength") != null) {            sLimit = " LIMIT " + getPara("iDisplayStart") + ", " + getPara("iDisplayLength");        }        /*         * Filtering NOTE this does not match the built-in DataTables filtering         * which does it word by word on any field. It's possible to do here,         * but concerned about efficiency on very large tables, and MySQL's         * regex functionality is very limited         */        String aColumns[] = { "building_name", "status", "type", "region", "area", "total", "intro", "remark", "create_date", "remark" };        String commonFilterWhere = "";        if (getPara("sSearch") != null && !"".equals(getPara("sSearch"))) {            commonFilterWhere = "WHERE (";            for (int i = 0; i < aColumns.length; i++) {                commonFilterWhere += aColumns[i] + " LIKE '%" + getPara("sSearch") + "%' OR ";            }            commonFilterWhere = commonFilterWhere.substring(0, commonFilterWhere.length() - 3);            commonFilterWhere += ')';        }        logger.debug("firtst filter:" + commonFilterWhere);        String sqlTotal = "select count(1) total from party where party_type='CUSTOMER'";        Record rec = Db.findFirst(sqlTotal);        logger.debug("total records:" + rec.getLong("total"));        String sql = "select * from party where party_type='CUSTOMER' order by create_date desc " + sLimit;        List<Record> orders = Db.find(sql);        for (Record record : orders) {            long partyId = record.getLong("id");            List<Record> partyAttrs = Db.find("select * from party_attribute where party_id=?", partyId);            for (Record attr : partyAttrs) {                if ("name".equals(attr.getStr("attr_name"))) {                    record.set("name", attr.getStr("attr_value"));                }                if ("address".equals(attr.getStr("attr_name"))) {                    record.set("address", attr.getStr("attr_value"));                }                if ("mobile".equals(attr.getStr("attr_name"))) {                    record.set("mobile", attr.getStr("attr_value"));                }                if ("company_name".equals(attr.getStr("attr_name"))) {                    record.set("company_name", attr.getStr("attr_value"));                }            }        }        Map customerListMap = new HashMap();        customerListMap.put("sEcho", pageIndex);        customerListMap.put("iTotalRecords", rec.getLong("total"));        customerListMap.put("iTotalDisplayRecords", rec.getLong("total"));        customerListMap.put("aaData", orders);        renderJson(customerListMap);    }    public void add() {        setAttr("saveOK", false);        render("contract/ContractEdit.html");    }    public void edit() {        long id = getParaToLong();        Party party = Party.dao.findById(id);        setAttr("party", party);        render("contract/ContractEdit.html");    }    public void save() {        setAttr("saveOK", true);        redirect("/yh/customerContract/edit/");    }}