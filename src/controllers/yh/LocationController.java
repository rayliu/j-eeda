package controllers.yh;import interceptor.SetAttrLoginUserInterceptor;import java.util.HashMap;import java.util.List;import java.util.Map;import org.apache.commons.lang.StringUtils;import org.apache.shiro.authz.annotation.RequiresAuthentication;import com.jfinal.aop.Before;import com.jfinal.core.Controller;import com.jfinal.log.Logger;import com.jfinal.plugin.activerecord.Db;import com.jfinal.plugin.activerecord.Record;@RequiresAuthentication@Before(SetAttrLoginUserInterceptor.class)public class LocationController extends Controller {    private Logger logger = Logger.getLogger(LocationController.class);    // in config route已经将路径默认设置为/yh    // me.add("/yh", controllers.yh.AppController.class, "/yh");    public void index() {        render("/yh/profile/location.html");    }    // 列出城市信息    public void listLocation() {        String sLimit = "";        String sSearch = getPara("sSearch");        String pageIndex = getPara("sEcho");        if (getPara("iDisplayStart") != null && getPara("iDisplayLength") != null) {            sLimit = " LIMIT " + getPara("iDisplayStart") + ", " + getPara("iDisplayLength");        }        String columsSql = " select concat(t.name, ' ',t2.name,' ',t3.name) as name,t.name as province,t2.name as city,t3.name as district ";                String fromSql =" from location t left join location t2 on t.code = t2.pcode left join location t3 on t3.pcode=t2.code where t.pcode = 1";           String conditions=" where 1=1  ";        if (StringUtils.isNotEmpty(sSearch)){        	conditions+=" and UPPER(A.province) like '%"+sSearch.toUpperCase()+"%' "        			+ " or UPPER(A.city) like '%"+sSearch.toUpperCase()+"%' "        			+ " or UPPER(A.district) like '%"+sSearch.toUpperCase()+"%' ";        }                        List<Record> rec = Db.find("select * from (" + columsSql + fromSql+") A "+ conditions + sLimit);        //总数数量        Record recTotal = Db.findFirst("select count(*) total from(select * from (" + columsSql + fromSql+") A "+ conditions+") B");        Long total = recTotal.getLong("total");        logger.debug("total records:" + total);        Map orderMap = new HashMap();        orderMap.put("sEcho", pageIndex);        orderMap.put("iTotalRecords", total);        orderMap.put("iTotalDisplayRecords", total);        orderMap.put("aaData", rec);        renderJson(orderMap);    }}